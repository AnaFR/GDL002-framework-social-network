{"version":3,"sources":["img/survey.png","img/corusel2.jpg","serviceWorker.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","constants/routes.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/SignOut/index.js","constants/roles.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/MedicalRecord/index.js","components/Home/index.js","components/Messages/MessageItem.js","components/Messages/MessageList.js","components/Messages/Messages.js","components/Messages/index.js","components/Blog/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Users/UserList.js","components/Users/UserItem.js","components/Admin/index.js","components/App/index.js","index.js","img/computer.jpg"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","message","messages","form","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","GoogleAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","HOME","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","map","provider","providerId","includes","needsEmailVerification","type","onClick","disabled","_ref","ADMIN","NavigationAuth","isOpen","toggleCollapse","mdbreact_esm","color","dark","expand","src","Logo","alt","width","height","id","navbar","left","active","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","CarouselPage","activeItem","length","showControls","showIndicators","className","itemId","Computer","Carousel","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","ROLES","set","catch","code","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","Grid","centered","columns","Column","Header","as","textAlign","Segment","Form","size","Input","fluid","icon","iconPosition","placeholder","Button","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetPage","PasswordForgetForm","SignInFormBase","Message","react_router_dom","SignInGoogleBase","socialAuthUser","displayName","Icon","SignInForm","SignInGoogle","SignInPage","Record","alert","alertData","setTimeout","refs","contactForm","reset","_this3","orderByKey","limitToLast","on","_snapshot$val","data","city","phone","age","weight","e","_this4","params","inputName","inputEmail","inputPhone","sex","inputSex","textAreaMessage","inputAge","inputWeight","inputHeight","showAlert","resetForm","_this5","role","style","padding","sendMessage","bind","htmlFor","rows","margin","href","MedicalRecord","MessageItem","onToggleEditMode","editMode","editText","text","onChangeEditText","onSaveEditText","onEditMessage","_this$props","onRemoveMessage","userId","editedAt","MessageList","Messages_MessageItem","Messages","onListenForMessages","loading","orderByChild","limit","messageObject","messageList","keys","onChangeText","onCreateMessage","createdAt","TIMESTAMP","messageSnapshot","objectWithoutProperties","remove","onNextPage","off","Messages_MessageList","components_Messages","PasswordChangeForm","SIGN_IN_METHODS","LoginManagementBase","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","onUnlink","unlink","signInMethod","onlyOneLeft","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","LoginManagement","PasswordChange","UserList","usersObject","usersList","pathname","UserItem","onSendPasswordResetEmail","react_router","exact","path","component","components_Navigation","LandingPage","HomePage","BlogPage","AccountPage","AdminPage","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4416b71c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/survey.933d2776.png\";","module.exports = __webpack_public_path__ + \"static/media/corusel2.2278336a.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId:process.env.REACT_APP_APPID\r\n};\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    /* Helper */\r\n\r\n    this.serverValue = app.database.ServerValue;\r\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\r\n\r\n    /* Firebase APIs */\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n\r\n    /* Social Sign In Method Provider */\r\n\r\n    this.googleProvider = new app.auth.GoogleAuthProvider();\r\n  \r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithGoogle = () =>\r\n    this.auth.signInWithPopup(this.googleProvider);\r\n\r\n \r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n      url:\"http://localhost:3000\"\r\n    });\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** Merge Auth and DB User API *** //\r\n\r\n  onAuthUserListener = (next, fallback) =>\r\n    this.auth.onAuthStateChanged(authUser => {\r\n      if (authUser) {\r\n        this.user(authUser.uid)\r\n          .once('value')\r\n          .then(snapshot => {\r\n            const dbUser = snapshot.val();\r\n\r\n            // default empty roles\r\n            if (!dbUser.roles) {\r\n              dbUser.roles = {};\r\n            }\r\n\r\n            // merge auth and db user\r\n            authUser = {\r\n              uid: authUser.uid,\r\n              email: authUser.email,\r\n              emailVerified: authUser.emailVerified,\r\n              providerData: authUser.providerData,\r\n              ...dbUser,\r\n            };\r\n\r\n            next(authUser);\r\n          });\r\n      } else {\r\n        fallback();\r\n      }\r\n    });\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  // *** Message API ***\r\n\r\n  message = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  messages = () => this.db.ref('messages');\r\n\r\n  \r\n  //form = uid => this.db.ref(`messages/${uid}`);\r\n\r\n  form = () => this.db.ref('form');\r\n}\r\n\r\nexport default Firebase;\r\n\r\n","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem('authUser')),\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          localStorage.setItem('authUser', JSON.stringify(authUser));\r\n          this.setState({ authUser });\r\n        },\r\n        () => {\r\n          localStorage.removeItem('authUser');\r\n          this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const BLOG = '/blog';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const ADMIN = '/admin';\r\nexport const ADMIN_DETAILS = '/admin/:id';\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.onAuthUserListener(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n        () => this.props.history.push(ROUTES.SIGN_IN),\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst needsEmailVerification = authUser =>\r\n  authUser &&\r\n  !authUser.emailVerified &&\r\n  authUser.providerData\r\n    .map(provider => provider.providerId)\r\n    .includes('password');\r\n\r\nconst withEmailVerification = Component => {\r\n  class WithEmailVerification extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { isSent: false };\r\n    }\r\n\r\n    onSendEmailVerification = () => {\r\n      this.props.firebase\r\n        .doSendEmailVerification()\r\n        .then(() => this.setState({ isSent: true }));\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            needsEmailVerification(authUser) ? (\r\n              <div>\r\n                {this.state.isSent ? (\r\n                  <p>\r\n                    E-Mail confirmation sent: Check your E-Mails (Spam\r\n                    folder included) for a confirmation E-Mail.\r\n                    Refresh this page once you confirmed your E-Mail.\r\n                  </p>\r\n                ) : (\r\n                  <p>\r\n                    Verify your E-Mail: Check your E-Mails (Spam folder\r\n                    included) for a confirmation E-Mail or send\r\n                    another confirmation E-Mail.\r\n                  </p>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.onSendEmailVerification}\r\n                  disabled={this.state.isSent}\r\n                >\r\n                  Send confirmation E-Mail\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <Component {...this.props} />\r\n            )\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithEmailVerification);\r\n};\r\n\r\nexport default withEmailVerification;\r\n","import React from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const ADMIN = 'ADMIN';\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport SignOutButton from \"../SignOut\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport Logo from \"../../img/survey.png\";\r\n\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBDropdown,\r\n} from \"mdbreact\";\r\n\r\n\r\n\r\nconst Navigation = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser =>\r\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\r\n    }\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\n\r\n\r\n\r\n// const NavigationAuth = ({ authUser }) => (\r\n//   <ul>\r\n//     <li>\r\n//       <Link to={ROUTES.LANDING}>Home</Link>\r\n//     </li>\r\n//     <li>\r\n//       <Link to={ROUTES.HOME}>My Medical Record</Link>\r\n//     </li>\r\n//     <li>\r\n//       <Link to={ROUTES.BLOG}>Blog</Link>\r\n//     </li>\r\n//     <li>\r\n//       <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n//     </li>\r\n//     {!!authUser.roles[ROLES.ADMIN] && (\r\n//       <li>\r\n//         <Link to={ROUTES.ADMIN}>Admin</Link>\r\n//       </li>\r\n//     )}\r\n//     <li>\r\n//       <SignOutButton />\r\n//     </li>\r\n//   </ul>\r\n// );\r\n\r\n\r\nclass NavigationAuth extends Component {\r\n  \r\n  state = {\r\n    \r\n    isOpen: false\r\n  };\r\n\r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <img src={Logo} alt=\"Logo\" width=\"50\" height=\"30\" />\r\n\r\n          {/* <strong className=\"white-text\">MMR</strong> */}\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem active>\r\n              <MDBNavLink to={ROUTES.LANDING}>Welcome</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to={ROUTES.HOME}>My Medical Record</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to={ROUTES.ADMIN}>Patients</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to={ROUTES.BLOG}>Blog</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to={ROUTES.ACCOUNT}>Account</MDBNavLink>\r\n            </MDBNavItem>\r\n           \r\n            <MDBNavItem>\r\n                <SignOutButton />\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdown />\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// const NavigationNonAuth = () => (\r\n//   <ul>\r\n//     <li>\r\n//       <Link to={ROUTES.LANDING}>Welcome</Link>\r\n//     </li>\r\n//     <li>\r\n//       <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n//     </li>\r\n//   </ul>\r\n// );\r\n\r\nclass NavigationNonAuth extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <img src={Logo} alt=\"Logo\" width=\"50\" height=\"30\" />\r\n\r\n          {/* <strong className=\"white-text\">MMR</strong> */}\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem active>\r\n              <MDBNavLink to={ROUTES.LANDING}>Welcome</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to={ROUTES.SIGN_IN}>Sign In</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdown />\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { MDBCarousel, MDBCarouselCaption, MDBCarouselInner, MDBCarouselItem, MDBView, MDBMask, MDBContainer } from\r\n\"mdbreact\";\r\nimport Computer from \"../../img/computer.jpg\" ;\r\nimport Carousel from \"../../img/corusel2.jpg\";\r\nconst CarouselPage = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCarousel\r\n        activeItem={1}\r\n        length={2}\r\n        showControls={true}\r\n        showIndicators={true}\r\n        className=\"z-depth-1\"\r\n      >\r\n        <MDBCarouselInner>\r\n          <MDBCarouselItem itemId=\"1\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src= {Computer}\r\n                alt=\"First slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          <MDBCarouselItem itemId=\"2\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src= {Carousel}\r\n                alt=\"Second slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem>\r\n          {/* <MDBCarouselItem itemId=\"3\">\r\n            <MDBView>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\"\r\n                alt=\"Third slide\"\r\n              />\r\n            </MDBView>\r\n          </MDBCarouselItem> */}\r\n        </MDBCarouselInner>\r\n      </MDBCarousel>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default CarouselPage;\r\n\r\n// // WELCOME PAGE\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport * as ROLES from \"../../constants/roles\";\r\nimport Computer from \"../../img/computer.jpg\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Message,\r\n  Segment\r\n} from \"semantic-ui-react\";\r\n\r\nconst SignUpPage = () => (\r\n  <div>\r\n    {/* <h1>SignUp</h1> */}\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  isAdmin: false,\r\n  error: null\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS = \"auth/email-already-in-use\";\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with this E-Mail address already exists.\r\n  Try to login with this account instead. If you think the\r\n  account is already used from one of the social logins, try\r\n  to sign in with one of them. Afterward, associate your accounts\r\n  on your personal account page.\r\n`;\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne, isAdmin } = this.state;\r\n    const roles = {};\r\n\r\n    if (isAdmin) {\r\n      roles[ROLES.ADMIN] = ROLES.ADMIN;\r\n    }\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase.user(authUser.user.uid).set({\r\n          username,\r\n          email,\r\n          roles\r\n        });\r\n      })\r\n      .then(() => {\r\n        return this.props.firebase.doSendEmailVerification();\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  onChangeCheckbox = event => {\r\n    this.setState({ [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      isAdmin,\r\n      error\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <Grid centered columns={3}>\r\n        <img className=\"loginbkg\" src={Computer} alt=\"Computer\" />\r\n\r\n        <Grid.Column>\r\n          <Header as=\"h2\" textAlign=\"center\">\r\n            <br />\r\n            <br />\r\n            My Medical Record\r\n          </Header>\r\n\r\n          <Segment onSubmit={this.onSubmit}>\r\n            <Form size=\"large\">\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                placeholder=\"Full name\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                placeholder=\"Email address\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                name=\"passwordOne\"\r\n                value={passwordOne}\r\n                onChange={this.onChange}\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"warning sign\"\r\n                iconPosition=\"left\"\r\n                name=\"passwordTwo\"\r\n                value={passwordTwo}\r\n                onChange={this.onChange}\r\n                placeholder=\"Confirm Password\"\r\n                type=\"password\"\r\n              />\r\n              <label>\r\n                Doctor:\r\n                <input\r\n                  name=\"isAdmin\"\r\n                  type=\"checkbox\"\r\n                  checked={isAdmin}\r\n                  onChange={this.onChangeCheckbox}\r\n                />\r\n              </label>\r\n              <Button\r\n                disabled={isInvalid}\r\n                type=\"submit\"\r\n                color=\"blue\"\r\n                fluid\r\n                size=\"large\"\r\n              >\r\n                SIGN UP\r\n              </Button>\r\n              {error && <p>{error.message}</p>}\r\n            </Form>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport Computer from \"../../img/computer.jpg\";\r\n\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      \r\n      <form onSubmit={this.onSubmit}>\r\n                <img className=\"loginbkg\" src={Computer} alt=\"Computer\" />\r\n\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const PasswordForgetLink = () => (\r\n//   <p>\r\n//     <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n//   </p>\r\n// );\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm };\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { PasswordForgetLink } from \"../PasswordForget\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport Computer from \"../../img/computer.jpg\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Icon,\r\n  Header,\r\n  Message,\r\n  \r\n  Segment\r\n} from \"semantic-ui-react\";\r\n\r\nconst SignInPage = () => (\r\n  <div>\r\n    {/* <h1>SignIn</h1> */}\r\n    <SignInForm />\r\n    <SignInGoogle />\r\n    {/* <PasswordForgetLink /> */}\r\n    {/* <SignUpLink /> */}\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null\r\n};\r\n\r\nconst ERROR_CODE_ACCOUNT_EXISTS =\r\n  \"auth/account-exists-with-different-credential\";\r\n\r\nconst ERROR_MSG_ACCOUNT_EXISTS = `\r\n  An account with an E-Mail address to\r\n  this social account already exists. Try to login from\r\n  this account instead and associate your social accounts on\r\n  your personal account page.\r\n`;\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <Grid centered columns={3}>\r\n        <img className=\"loginbkg\" src={Computer} alt=\"Computer\" />\r\n\r\n        <Grid.Column>\r\n          <Header as=\"h2\" textAlign=\"center\">\r\n            <br />\r\n            <br />\r\n            My Medical Record\r\n          </Header>\r\n          <Segment onSubmit={this.onSubmit}>\r\n            <Form size=\"large\">\r\n              <Form.Input\r\n                fluid\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.onChange}\r\n                type=\"text\"\r\n                placeholder=\"Email address\"\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={this.onChange}\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button\r\n                disabled={isInvalid}\r\n                type=\"submit\"\r\n                color=\"blue\"\r\n                fluid\r\n                size=\"large\"\r\n              >\r\n                Login\r\n              </Button>\r\n              {error && <p>{error.message}</p>}\r\n            </Form>\r\n          </Segment>\r\n          <Message>\r\n            <Link to={ROUTES.SIGN_UP}>Register Now</Link> &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n            <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nclass SignInGoogleBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { error: null };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    this.props.firebase\r\n      .doSignInWithGoogle()\r\n      .then(socialAuthUser => {\r\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\r\n          username: socialAuthUser.user.displayName,\r\n          email: socialAuthUser.user.email,\r\n          roles: {}\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ error: null });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\r\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\r\n        }\r\n\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <center>\r\n          {\" \"}\r\n          or Sign Up with.\r\n          <Button type=\"submit\" icon>\r\n            <Icon name=\"google\" />\r\n          </Button>\r\n        </center>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInFormBase);\r\n\r\nconst SignInGoogle = compose(\r\n  withRouter,\r\n  withFirebase\r\n)(SignInGoogleBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInGoogle };\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\n\r\nclass Record extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      form: [],\r\n      alert: false,\r\n      alertData: {}\r\n    };\r\n  }\r\n\r\n  showAlert(type, message) {\r\n    this.setState({\r\n      alert: true,\r\n      alertData: { type, message }\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ alert: false });\r\n    }, 4000);\r\n  }\r\n\r\n  resetForm() {\r\n    this.refs.contactForm.reset();\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.firebase\r\n      .form()\r\n      .orderByKey()\r\n      .limitToLast(6);\r\n    this.props.firebase.form().on(\"child_added\", snapshot => {\r\n      const {\r\n        name,\r\n        email,\r\n        city,\r\n        phone,\r\n        message,\r\n        age,\r\n        weight,\r\n        height\r\n      } = snapshot.val();\r\n      const data = { name, email, city, phone, message, age, weight, height };\r\n      this.setState({ form: [data].concat(this.state.form) });\r\n    });\r\n  }\r\n\r\n  sendMessage(e) {\r\n    e.preventDefault();\r\n    const params = {\r\n      name: this.inputName.value,\r\n      email: this.inputEmail.value,\r\n      phone: this.inputPhone.value,\r\n      sex: this.inputSex.value,\r\n    \r\n      message: this.textAreaMessage.value,\r\n      age: this.inputAge.value,\r\n      weight: this.inputWeight.value,\r\n      height: this.inputHeight.value\r\n    };\r\n    if (\r\n      params.name &&\r\n      params.email &&\r\n      params.phone &&\r\n      params.sex &&\r\n      params.message &&\r\n      params.age &&\r\n      params.weight &&\r\n      params.height\r\n    ) {\r\n      this.props.firebase\r\n        .form()\r\n        .push(params)\r\n        .then(() => {\r\n          this.showAlert(\"success\", \"Your Medical Record was sent successfull\");\r\n        })\r\n        .catch(() => {\r\n          this.showAlert(\"danger\", \"Your Medical Record could not be sent\");\r\n        });\r\n      this.resetForm();\r\n    } else {\r\n      this.showAlert(\"warning\", \"Please fill the form\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.alert && (\r\n          <div\r\n            className={`alert alert-${this.state.alertData.type}`}\r\n            role=\"alert\"\r\n          >\r\n            <div className=\"container\">{this.state.alertData.message}</div>\r\n          </div>\r\n        )}\r\n        <div className=\"container\" style={{ padding: `50px 0px` }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4\">\r\n              <h2>My medical Record</h2>\r\n              <form onSubmit={this.sendMessage.bind(this)} ref=\"contactForm\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"name\"\r\n                    placeholder=\"Name\"\r\n                    ref={name => (this.inputName = name)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email\"\r\n                    ref={email => (this.inputEmail = email)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phone\">Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"phone\"\r\n                    placeholder=\"+52 1\"\r\n                    ref={phone => (this.inputPhone = phone)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"sex\">Sex</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"sex\"\r\n                    ref={sex => (this.inputSex = sex)}\r\n                  >\r\n                    <option value=\"México\">Female</option>\r\n                    <option value=\"Guadalajara\">Male</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"age\">Age</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"age\"\r\n                    placeholder=\"age\"\r\n                    ref={age => (this.inputAge = age)}\r\n                  />\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                \r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"weight\">Weight(Kg)</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    id=\"weight\"\r\n                    placeholder=\"weight\"\r\n                    ref={weight => (this.inputWeight = weight)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"height\">Height(mts)</label>\r\n                  <input\r\n                    type=\"height\"\r\n                    className=\"form-control\"\r\n                    id=\"height\"\r\n                    placeholder=\"height\"\r\n                    ref={height => (this.inputHeight = height)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"message\">Medical Diganosis</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"message\"\r\n                    rows=\"1\"\r\n                    ref={message => (this.textAreaMessage = message)}\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-sm-8\">\r\n              <div className=\"row\">\r\n                {this.state.form.map(form => (\r\n                  <div\r\n                    className=\"col-sm-6\"\r\n                    key={form.phone}\r\n                    style={{ margin: `0px 0px 30px 0px` }}\r\n                  >\r\n                    <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                        <h8 className=\"card-title\">{\"Name:\"   +  \"     \" + form.name}</h8>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">\r\n                          {\"Email:\"  +  \"      \" + form.email}\r\n                        </h6>\r\n                        <p className=\"card-text\">{\"DX:\" + \"    \"  + form.message}</p>\r\n                        <a href={`tel:${form.phone}`} className=\"card-link\">\r\n                          {\"Phone:\"  +   \"   \" + form.phone}\r\n                        </a>\r\n                        <a href={`age:${form.age}`} className=\"card-link\">\r\n                          {form.age + \"   \" + \"years\"}\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"alert alert-info fixed-bottom\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-12\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Record);\r\n","import React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\nimport Record from \"../MedicalRecord\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <Record />\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(HomePage);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass MessageItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editMode: false,\r\n      editText: this.props.message.text,\r\n    };\r\n  }\r\n\r\n  onToggleEditMode = () => {\r\n    this.setState(state => ({\r\n      editMode: !state.editMode,\r\n      editText: this.props.message.text,\r\n    }));\r\n  };\r\n\r\n  onChangeEditText = event => {\r\n    this.setState({ editText: event.target.value });\r\n  };\r\n\r\n  onSaveEditText = () => {\r\n    this.props.onEditMessage(this.props.message, this.state.editText);\r\n\r\n    this.setState({ editMode: false });\r\n  };\r\n\r\n  render() {\r\n    const { authUser, message, onRemoveMessage } = this.props;\r\n    const { editMode, editText } = this.state;\r\n\r\n    return (\r\n      <li>\r\n        {editMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={editText}\r\n            onChange={this.onChangeEditText}\r\n          />\r\n        ) : (\r\n          <span>\r\n            <strong>{message.userId}</strong> {message.text}\r\n            {message.editedAt && <span>(Edited)</span>}\r\n          </span>\r\n        )}\r\n\r\n        {authUser.username === message.userId && (\r\n          <span>\r\n            {editMode ? (\r\n              <span>\r\n                <button onClick={this.onSaveEditText}>Save</button>\r\n                <button onClick={this.onToggleEditMode}>Reset</button>\r\n              </span>\r\n            ) : (\r\n              <button onClick={this.onToggleEditMode}>Edit</button>\r\n            )}\r\n\r\n            {!editMode && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => onRemoveMessage(message.username)}\r\n              >\r\n                Delete\r\n              </button>\r\n            )}\r\n          </span>\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageItem;\r\n","import React from 'react';\r\n\r\nimport MessageItem from './MessageItem';\r\n\r\nconst MessageList = ({\r\n  authUser,\r\n  messages,\r\n  onEditMessage,\r\n  onRemoveMessage,\r\n}) => (\r\n  <ul>\r\n    {messages.map(message => (\r\n      <MessageItem\r\n        authUser={authUser}\r\n        key={message.username}\r\n        message={message}\r\n        onEditMessage={onEditMessage}\r\n        onRemoveMessage={onRemoveMessage}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\n\r\nexport default MessageList;\r\n","import React, { Component } from 'react';\r\nimport { AuthUserContext } from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\nimport MessageList from './MessageList';\r\n\r\nclass Messages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: '',\r\n      loading: false,\r\n      messages: [],\r\n      limit: 5,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onListenForMessages();\r\n  }\r\n\r\n  onListenForMessages = () => {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase\r\n      .messages()\r\n      .orderByChild('createdAt')\r\n      .limitToLast(this.state.limit)\r\n      .on('value', snapshot => {\r\n        const messageObject = snapshot.val();\r\n\r\n        if (messageObject) {\r\n          const messageList = Object.keys(messageObject).map(key => ({\r\n            ...messageObject[key],\r\n            username: key,\r\n          }));\r\n\r\n          this.setState({\r\n            messages: messageList,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({ messages: null, loading: false });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.messages().off();\r\n  }\r\n\r\n  onChangeText = event => {\r\n    this.setState({ text: event.target.value });\r\n  };\r\n\r\n  onCreateMessage = (event, authUser) => {\r\n    this.props.firebase.messages().push({\r\n      text: this.state.text,\r\n      userId: authUser.username,\r\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\r\n    });\r\n\r\n    this.setState({ text: '' });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onEditMessage = (message, text) => {\r\n    const { username, ...messageSnapshot } = message;\r\n\r\n    this.props.firebase.message(message.username).set({\r\n      ...messageSnapshot,\r\n      text,\r\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\r\n    });\r\n  };\r\n\r\n  onRemoveMessage = username => {\r\n    this.props.firebase.message(username).remove();\r\n  };\r\n\r\n  onNextPage = () => {\r\n    this.setState(\r\n      state => ({ limit: state.limit + 5 }),\r\n      this.onListenForMessages,\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { text, messages, loading } = this.state;\r\n\r\n    return (\r\n      <AuthUserContext.Consumer>\r\n        {authUser => (\r\n          <div>\r\n            {!loading && messages && (\r\n              <button type=\"button\" onClick={this.onNextPage}>\r\n                More\r\n              </button>\r\n            )}\r\n\r\n            {loading && <div>Loading ...</div>}\r\n\r\n            {messages && (\r\n              <MessageList\r\n                authUser={authUser}\r\n                messages={messages}\r\n                onEditMessage={this.onEditMessage}\r\n                onRemoveMessage={this.onRemoveMessage}\r\n              />\r\n            )}\r\n\r\n            {!messages && <div>There are no messages ...</div>}\r\n\r\n            <form\r\n              onSubmit={event =>\r\n                this.onCreateMessage(event, authUser)\r\n              }\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                value={text}\r\n                onChange={this.onChangeText}\r\n              />\r\n              <button type=\"submit\">Send</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </AuthUserContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Messages);\r\n","import Messages from './Messages';\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport { compose } from \"recompose\";\r\nimport { withAuthorization, withEmailVerification } from \"../Session\";\r\nimport Messages from \"../Messages\";\r\n\r\nconst BlogPage = () => (\r\n  <div>\r\n    <h1>Blog</h1>\r\n    <p>This is a Medical blog you can share information about medical issues...... </p>\r\n\r\n    <Messages />\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition)\r\n)(BlogPage);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'recompose';\r\n\r\nimport {\r\n  AuthUserContext,\r\n  withAuthorization,\r\n  withEmailVerification,\r\n} from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n\r\nconst SIGN_IN_METHODS = [\r\n  {\r\n    id: 'password',\r\n    provider: null,\r\n  },\r\n  {\r\n    id: 'google.com',\r\n    provider: 'googleProvider',\r\n  },\r\n \r\n];\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n        <LoginManagement authUser={authUser} />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nclass LoginManagementBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSignInMethods: [],\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchSignInMethods();\r\n  }\r\n\r\n  fetchSignInMethods = () => {\r\n    this.props.firebase.auth\r\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\r\n      .then(activeSignInMethods =>\r\n        this.setState({ activeSignInMethods, error: null }),\r\n      )\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onSocialLoginLink = provider => {\r\n    this.props.firebase.auth.currentUser\r\n      .linkWithPopup(this.props.firebase[provider])\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onDefaultLoginLink = password => {\r\n    const credential = this.props.firebase.emailAuthProvider.credential(\r\n      this.props.authUser.email,\r\n      password,\r\n    );\r\n\r\n    this.props.firebase.auth.currentUser\r\n      .linkAndRetrieveDataWithCredential(credential)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  onUnlink = providerId => {\r\n    this.props.firebase.auth.currentUser\r\n      .unlink(providerId)\r\n      .then(this.fetchSignInMethods)\r\n      .catch(error => this.setState({ error }));\r\n  };\r\n\r\n  render() {\r\n    const { activeSignInMethods, error } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        Sign In Methods:\r\n        <ul>\r\n          {SIGN_IN_METHODS.map(signInMethod => {\r\n            const onlyOneLeft = activeSignInMethods.length === 1;\r\n            const isEnabled = activeSignInMethods.includes(\r\n              signInMethod.id,\r\n            );\r\n\r\n            return (\r\n              <li key={signInMethod.id}>\r\n                {signInMethod.id === 'password' ? (\r\n                  <DefaultLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onDefaultLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                ) : (\r\n                  <SocialLoginToggle\r\n                    onlyOneLeft={onlyOneLeft}\r\n                    isEnabled={isEnabled}\r\n                    signInMethod={signInMethod}\r\n                    onLink={this.onSocialLoginLink}\r\n                    onUnlink={this.onUnlink}\r\n                  />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        {error && error.message}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SocialLoginToggle = ({\r\n  onlyOneLeft,\r\n  isEnabled,\r\n  signInMethod,\r\n  onLink,\r\n  onUnlink,\r\n}) =>\r\n  isEnabled ? (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onUnlink(signInMethod.id)}\r\n      disabled={onlyOneLeft}\r\n    >\r\n      Deactivate {signInMethod.id}\r\n    </button>\r\n  ) : (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onLink(signInMethod.provider)}\r\n    >\r\n      Link {signInMethod.id}\r\n    </button>\r\n  );\r\n\r\nclass DefaultLoginToggle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { passwordOne: '', passwordTwo: '' };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onLink(this.state.passwordOne);\r\n    this.setState({ passwordOne: '', passwordTwo: '' });\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onlyOneLeft,\r\n      isEnabled,\r\n      signInMethod,\r\n      onUnlink,\r\n    } = this.props;\r\n\r\n    const { passwordOne, passwordTwo } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return isEnabled ? (\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onUnlink(signInMethod.id)}\r\n        disabled={onlyOneLeft}\r\n      >\r\n        Deactivate {signInMethod.id}\r\n      </button>\r\n    ) : (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Link {signInMethod.id}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginManagement = withFirebase(LoginManagementBase);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(\r\n  withEmailVerification,\r\n  withAuthorization(condition),\r\n)(AccountPage);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n\r\n  render() {\r\n    const { users, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Users</h2>\r\n        {loading && <div>Loading ...</div>}\r\n        <ul>\r\n          {users.map(user => (\r\n            <li key={user.uid}>\r\n              <span>\r\n                <strong>ID:</strong> {user.uid}\r\n              </span>\r\n              <span>\r\n                <strong>E-Mail:</strong> {user.email}\r\n              </span>\r\n              <span>\r\n                <strong>Username:</strong> {user.username}\r\n              </span>\r\n              <span>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\r\n                    state: { user },\r\n                  }}\r\n                >\r\n                  Details\r\n                </Link>\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserList);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass UserItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      user: null,\r\n      ...props.location.state,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true });\r\n\r\n    this.props.firebase\r\n      .user(this.props.match.params.id)\r\n      .on('value', snapshot => {\r\n        this.setState({\r\n          user: snapshot.val(),\r\n          loading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.user(this.props.match.params.id).off();\r\n  }\r\n\r\n  onSendPasswordResetEmail = () => {\r\n    this.props.firebase.doPasswordReset(this.state.user.email);\r\n  };\r\n\r\n  render() {\r\n    const { user, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>User ({this.props.match.params.id})</h2>\r\n        {loading && <div>Loading ...</div>}\r\n\r\n        {user && (\r\n          <div>\r\n            <span>\r\n              <strong>ID:</strong> {user.uid}\r\n            </span>\r\n            <span>\r\n              <strong>E-Mail:</strong> {user.email}\r\n            </span>\r\n            <span>\r\n              <strong>Username:</strong> {user.username}\r\n            </span>\r\n            <span>\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.onSendPasswordResetEmail}\r\n              >\r\n                Send Password Reset\r\n              </button>\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UserItem);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withAuthorization} from '../Session';\r\n// , withEmailVerification \r\nimport { UserList, UserItem } from '../Users';\r\nimport * as ROLES from '../../constants/roles';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst AdminPage = () => (\r\n  <div>\r\n    <h1>Welcome Admin</h1>\r\n    <p>The Admin Page is accessible by every signed in admin user.</p>\r\n\r\n    <Switch>\r\n      <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\r\n      <Route exact path={ROUTES.ADMIN} component={UserList} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser =>\r\n  authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default compose(\r\n  // withEmailVerification,\r\n  withAuthorization(condition),\r\n)(AdminPage);","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport BlogPage from '../Blog';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Navigation />\r\n\r\n      {/* <hr /> */}\r\n\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route\r\n        path={ROUTES.PASSWORD_FORGET}\r\n        component={PasswordForgetPage}\r\n      />\r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.BLOG} component={BlogPage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\n\n\n\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n);\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/computer.f71e9b9a.jpg\";"],"sourceRoot":""}